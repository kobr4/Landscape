"varying vec4 vColor;\
varying vec2 v_texture_coordinate;\
uniform sampler2D my_color_texture;\
uniform sampler2D my_lightmap_texture;\
uniform vec4 u_CameraPosition;\
varying vec4 v_Position;\
vec4 ResolveColor(in vec4 point) {\
	vec4 p1 = point;\
	vec4 p2 = u_CameraPosition;\
	vec4 p3 = vec4(0,0,0,0);\
	vec4 d = normalize(p2 - p1);\
	float r = 6800.0;\
	float a = dot(d, d);\
	float b = 2.0 * dot(d, p1 - p3);\
	float c = dot(p1 - p3, p1 - p3) - r*r;\
	float test = b*b - 4.0*a*c;\
	if (test >= 0.0) {\
		vec4  lightColor  =  texture2D(my_color_texture, v_texture_coordinate);\
		if (lightColor.x < 0.57) {lightColor = vec4(0.0,0.0,0.0,1.0);}\
		else {lightColor = lightColor * lightColor + vec4(0.2,0.2,0.2,0.0);}\
		vec4 fogColor = vec4(0.529, 0.808, 0.922,1.0);\
		vec4 pc1 = p2 + ((-b + sqrt(test)) / 2 * a) * d;\
		vec4 pc2 = p2 + ((-b - sqrt(test)) / 2 * a) * d;\
		float f = 500.0 / distance(pc1,pc2);\
		return (1.0 - f)*fogColor + f * lightColor;\
	} else {\
		vec4  color  =  texture2D(my_color_texture, v_texture_coordinate);\
		if (color.x < 0.57) {color = vec4(0.0,0.0,0.0,1.0);}\
		else {color = color * color + vec4(0.2,0.2,0.2,0.0);}\
		return color;\
	}\
}\
void main(void) {\
	gl_FragColor = 	ResolveColor(v_Position);\
}"